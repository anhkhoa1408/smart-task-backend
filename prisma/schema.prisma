// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String    @id @default(uuid()) @db.Uuid
  email    String    @unique
  name     String?
  phone    String?
  gender   Gender?
  isActive Boolean   @default(true)
  password String
  Project  Project[]
}

model Project {
  id          String   @id @default(uuid()) @db.Uuid
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.Uuid
  Task        Task[]
  isArchive   Boolean  @default(false)
}

model Task {
  id          String   @id @default(uuid()) @db.Uuid
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  priority    Priority @default(LOW)
  status      Status   @default(TODO)
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String   @db.Uuid
  subTasks    Task[]   @relation("TaskToSubTasks")
  parentTask  Task?    @relation("TaskToSubTasks", fields: [parentId], references: [id])
  parentId    String?  @db.Uuid // Nullable: root tasks won't have a parent
  isDelete    Boolean  @default(false)
}

enum Priority {
  URGENT
  HIGH
  NORMAL
  LOW
}

enum Status {
  TODO
  IN_PROGRESS
  COMPLETE
}

enum Gender {
  MALE
  FEMALE
}
